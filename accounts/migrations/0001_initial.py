# Generated by Django 2.0.5 on 2018-05-03 16:09

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Ca', 'Cash'), ('Cc', 'Credit Card'), ('Ln', 'Loan'), ('Iv', 'Investment'), ('Is', 'Insurance'), ('Bl', 'Billing')], default='Ca', help_text='The account type for related accounts', max_length=2)),
                ('name', models.CharField(help_text='Nickname, must be unique to the bank', max_length=255)),
                ('number', models.CharField(blank=True, help_text='Account number assigned by the bank', max_length=255, null=True)),
                ('active', models.BooleanField(default=True, help_text='Display account in primary accounts list')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=None, help_text='User defined order for display', null=True)),
                ('opened_on', models.DateField(blank=True, help_text='Date the account was opened', null=True)),
                ('closed_on', models.DateField(blank=True, help_text='Date the account was closed on', null=True)),
            ],
            options={
                'db_table': 'accounts',
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginning', models.DecimalField(decimal_places=2, default=0.0, help_text='Beginning balance of the account', max_digits=10)),
                ('ending', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Ending balance after transactions', max_digits=10)),
                ('account', models.ForeignKey(help_text='The account associated with the balance', limit_choices_to={'active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='balances', to='accounts.Account')),
            ],
            options={
                'db_table': 'balances',
            },
        ),
        migrations.CreateModel(
            name='BalanceSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, help_text='Date of accounting')),
                ('title', models.CharField(blank=True, help_text='A short title describing the balance sheet', max_length=255, unique_for_month='date')),
                ('memo', models.CharField(blank=True, help_text='A short memo or note describing the transaction', max_length=255, null=True)),
                ('accounts', models.ManyToManyField(help_text='Accounts modified by the balance sheet', related_name='_balancesheet_accounts_+', through='accounts.Balance', to='accounts.Account')),
            ],
            options={
                'db_table': 'balance_sheets',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the financial institution', max_length=255, unique=True)),
                ('short_name', models.CharField(blank=True, help_text='Short name for display purposes', max_length=32, null=True)),
                ('url', models.URLField(blank=True, help_text='URL of the bank for quick access', max_length=255, null=True)),
                ('active', models.BooleanField(default=True, help_text='Display bank in primary banks list')),
            ],
            options={
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, help_text='The date of the transaction')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, help_text='The amount of the transaction', max_digits=10)),
                ('memo', models.CharField(blank=True, help_text='A short memo or note describing the transaction', max_length=500, null=True)),
                ('credit', models.ForeignKey(help_text='The source of funds for the transaction', limit_choices_to={'active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='credits', to='accounts.Account')),
                ('debit', models.ForeignKey(help_text='The destination of funds for the transaction', limit_choices_to={'active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='debits', to='accounts.Account')),
                ('sheet', models.ForeignKey(help_text='The balance sheet for the associated transaction', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accounts.BalanceSheet')),
            ],
            options={
                'db_table': 'transactions',
            },
        ),
        migrations.AddField(
            model_name='balance',
            name='sheet',
            field=models.ForeignKey(help_text='The balance sheet for the associated balance', on_delete=django.db.models.deletion.CASCADE, related_name='balances', to='accounts.BalanceSheet'),
        ),
        migrations.AddField(
            model_name='account',
            name='bank',
            field=models.ForeignKey(help_text='Associated financial institution', limit_choices_to={'active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='accounts.Company'),
        ),
        migrations.AlterUniqueTogether(
            name='balance',
            unique_together={('sheet', 'account')},
        ),
        migrations.AlterUniqueTogether(
            name='account',
            unique_together={('name', 'bank')},
        ),
    ]
